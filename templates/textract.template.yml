AWSTemplateFormatVersion: "2010-09-09"
Description: "Textract Processing Pipeline with Custom Notification for Existing Bucket"

Parameters:
  BucketName:
    Type: String
    Description: "The name of the S3 bucket"

  RawFilesPrefix:
    Type: String
    Description: "Prefix for raw files in S3 bucket"

Resources:
  # Custom Resource Lambda Function
  NotificationLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: python3.8
      Timeout: 30
      Role: !GetAtt NotificationLambdaRole.Arn
      Code:
        ZipFile: |
          import boto3
          import cfnresponse

          def handler(event, context):
              s3 = boto3.client('s3')
              bucket_name = event['ResourceProperties']['BucketName']
              lambda_arn = event['ResourceProperties']['LambdaArn']
              prefix = event['ResourceProperties']['Prefix']

              try:
                  # Add notification configuration to the bucket
                  s3.put_bucket_notification_configuration(
                      Bucket=bucket_name,
                      NotificationConfiguration={
                          'LambdaFunctionConfigurations': [
                              {
                                  'LambdaFunctionArn': lambda_arn,
                                  'Events': ['s3:ObjectCreated:*'],
                                  'Filter': {
                                      'Key': {
                                          'FilterRules': [
                                              {'Name': 'prefix', 'Value': prefix}
                                          ]
                                      }
                                  }
                              }
                          ]
                      }
                  )
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              except Exception as e:
                  cfnresponse.send(event, context, cfnresponse.FAILED, {'Message': str(e)})

  # IAM Role for Notification Lambda
  NotificationLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3NotificationPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutBucketNotificationConfiguration"
                  - "s3:GetBucketNotificationConfiguration"
                Resource: !Sub "arn:aws:s3:::${BucketName}"
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  # Custom Resource for Notification
  S3Notification:
    Type: Custom::S3Notification
    Properties:
      ServiceToken: !GetAtt NotificationLambda.Arn
      BucketName: !Ref BucketName
      LambdaArn: !GetAtt TextractLambda.Arn
      Prefix: !Ref RawFilesPrefix

  # Textract Lambda Function
  TextractLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "TextractProcessingLambda"
      Runtime: python3.8
      Handler: textract_lambda.handler
      Role: !GetAtt TextractLambdaRole.Arn
      Code:
        S3Bucket: !Ref BucketName
        S3Key: "textract_lambda.zip"
      Timeout: 120
      MemorySize: 512

Outputs:
  BucketName:
    Description: "Name of the S3 bucket"
    Value: !Ref BucketName
