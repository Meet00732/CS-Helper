name: Deploy Summarization Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build Lambda Package in Docker
      run: |
        # Pull the Python 3.8 Docker image (or the version matching your Lambda runtime)
        docker pull python:3.8

        # Run the Docker container with the current directory mounted
        docker run --rm -v "$(pwd)":/app -w /app python:3.8 bash -c "
          # Update package manager and install zip utility
          apt-get update && apt-get install -y zip

          # Create deployment directories
          mkdir -p scripts lambda/build dependency_layer/python

          # Copy Lambda handler files to the build directory
          cp lambda/textract_lambda.py lambda/text_cleaning_lambda.py lambda/configuration.py lambda/__init__.py lambda/build/

          # Install dependencies for the Lambda function
          pip install -r lambda/requirements.txt -t lambda/build/

          # Package the Lambda function
          cd lambda/build
          zip -r ../../scripts/textract_lambda.zip ./*
          cd /app

          # Install dependencies for the Lambda layer
          pip install -r lambda/requirements.txt -t dependency_layer/python/

          # Package the Lambda layer
          cd dependency_layer
          zip -r ../scripts/dependency_layer.zip ./*
        "

    - name: Deploy SSM Stack
      run: |
        aws cloudformation deploy \
          --template-file templates/ssm.template.yml \
          --stack-name SSMParameterStack \
          --capabilities CAPABILITY_NAMED_IAM

    - name: Upload YAML templates and Lambda package to S3
      run: |
        aws s3 cp scripts/textract_lambda.zip s3://cs-helper/textract_lambda.zip
        aws s3 cp scripts/dependency_layer.zip s3://cs-helper/layers/dependency_layer.zip
        aws s3 cp templates/s3.template.yml s3://cs-helper/template/
        aws s3 cp templates/ssm.template.yml s3://cs-helper/template/
        aws s3 cp templates/textract.template.yml s3://cs-helper/template/
        aws s3 cp templates/master-stack.template.yml s3://cs-helper/template/

    - name: Deploy Master Stack
      run: |
        aws cloudformation deploy \
          --template-file templates/master-stack.template.yml \
          --stack-name SummarizationMasterStack \
          --capabilities CAPABILITY_NAMED_IAM
