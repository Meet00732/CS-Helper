name: Deploy Summarization Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build Lambda Package in Docker
      run: |
        docker pull python:3.8
        docker run --rm -v "$(pwd)":/app -w /app python:3.8 bash -c "
          apt-get update && apt-get install -y zip
          
          # Step 1: Set up directories
          echo 'Creating deployment directories...'
          mkdir -p scripts lambda/build nltk_data

          # Step 2: Install Python dependencies
          echo 'Installing Python dependencies...'
          python3 -m pip install --upgrade pip
          python3 -m pip install -r lambda/requirements.txt -t lambda/build/

          # Step 3: Download NLTK and TextBlob resources
          echo 'Downloading NLTK resources...'
          python3 -m pip install nltk textblob
          python3 -m nltk.downloader -d nltk_data punkt punkt_tab stopwords wordnet
          echo 'Downloading Textblob resources...'
          python3 -m textblob.download_corpora -d nltk_data

          # Step 4: Copy resources to Lambda build directory
          echo 'Copying resources to Lambda build directory...'
          cp -r nltk_data lambda/build/
          cp lambda/*.py lambda/build/

          # Verify contents of the build directory
          echo 'Verifying Lambda build directory contents...'
          ls -R lambda/build/

          # Step 5: Package the Lambda function
          echo 'Packaging Lambda function...'
          cd lambda/build
          zip -r ../../scripts/textract_lambda.zip ./*
          cd /app
        "

    - name: Deploy SSM Stack
      run: |
        aws cloudformation deploy \
          --template-file templates/ssm.template.yml \
          --stack-name SSMParameterStack \
          --capabilities CAPABILITY_NAMED_IAM

    - name: Upload YAML templates and Lambda package to S3
      run: |
        aws s3 cp scripts/textract_lambda.zip s3://cs-helper/textract_lambda.zip
        aws s3 cp templates/s3.template.yml s3://cs-helper/template/
        aws s3 cp templates/ssm.template.yml s3://cs-helper/template/
        aws s3 cp templates/textract.template.yml s3://cs-helper/template/
        aws s3 cp templates/master-stack.template.yml s3://cs-helper/template/

    - name: Deploy Master Stack
      run: |
        aws cloudformation deploy \
          --template-file templates/master-stack.template.yml \
          --stack-name SummarizationMasterStack \
          --capabilities CAPABILITY_NAMED_IAM
